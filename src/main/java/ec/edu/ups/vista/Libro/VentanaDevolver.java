/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ec.edu.ups.vista.Libro;

import ec.edu.ups.controlador.LibroControlador;
import ec.edu.ups.controlador.PrestamoControlador;
import ec.edu.ups.controlador.UsuarioControlador;
import ec.edu.ups.modelo.Libro;
import ec.edu.ups.modelo.Prestamo;
import ec.edu.ups.modelo.Usuario;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ferna
 */
public class VentanaDevolver extends javax.swing.JInternalFrame {

    private LibroControlador libroControlador;
    private PrestamoControlador prestamoControlador;
    private ResourceBundle mensajes;
    private String tituloOriginal;
    private Libro libro1 = null;

    public VentanaDevolver(UsuarioControlador usuarioControlador, LibroControlador libroControlador,PrestamoControlador prestamoControlador) {
        initComponents();
        this.libroControlador = libroControlador;
        this.prestamoControlador = prestamoControlador;
        mensajes = ResourceBundle.getBundle("mensajes.mensajes", Locale.getDefault());
        tituloOriginal = "Devolver Libro";
        setTitle(tituloOriginal);
        tblLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLibrosMouseClicked(evt);
            }
        });

        cargarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnDevolver = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLibros = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Devolver Libro");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnDevolver.setText("Devolver");
        btnDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverActionPerformed(evt);
            }
        });

        tblLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Titulo", "Autor", "Año", "Disponible"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLibros.setCellSelectionEnabled(true);
        tblLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLibrosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblLibros);
        tblLibros.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111)
                .addComponent(btnDevolver)
                .addContainerGap(227, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(btnDevolver))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverActionPerformed
        /* if (libro1 != null) {
        int codigoLibro = libro1.getId();
        Libro libroDevuelto = libroControlador.devolver(codigoLibro);
        
        if (libroDevuelto != null) {
            JOptionPane.showMessageDialog(this, "Libro devuelto exitosamente! :)");
            libro1 = null;
            cargarDatos();  // Actualizar la tabla después de devolver el libro
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo devolver el libro. Verifica el código del libro.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona un libro.");
    }
*/  if (libro1 != null) {
        int codigoLibro = libro1.getId();
        
        // Verificar si el libro está actualmente prestado
        Prestamo prestamo = buscarPrestamoPorLibroId(codigoLibro);
        
        if (prestamo != null) {
            // El libro está prestado, eliminar el préstamo
            libroControlador.devolver(codigoLibro);  // Cambiar disponibilidad del libro
            prestamoControlador.delete(prestamo.getId());  // Eliminar el préstamo
            JOptionPane.showMessageDialog(this, "Libro devuelto exitosamente y préstamo eliminado! :)");
        } else {
            // El libro no está actualmente prestado, solo cambiar disponibilidad
            libroControlador.devolver(codigoLibro);  // Cambiar disponibilidad del libro
            JOptionPane.showMessageDialog(this, "Libro devuelto exitosamente! :)");
        }
        
        libro1 = null;
        cargarDatos();  // Actualizar la tabla después de devolver el libro
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona un libro.");
    }
    }//GEN-LAST:event_btnDevolverActionPerformed
    private Prestamo buscarPrestamoPorLibroId(int libroId) {
    List<Prestamo> prestamos = prestamoControlador.list();
    for (Prestamo prestamo : prestamos) {
        if (prestamo.getLibro().getId() == libroId) {
            return prestamo;
        }
    }
    return null;  // Si no se encuentra un préstamo para el libro, devuelve null
}
    private void tblLibrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLibrosMouseClicked
        int selectedRow = tblLibros.getSelectedRow();
        if (selectedRow != -1) {
            int libroId = (int) tblLibros.getValueAt(selectedRow, 0);
            libro1 = libroControlador.read(libroId); // Debes implementar un método getById en tu controlador
        }
    }//GEN-LAST:event_tblLibrosMouseClicked

    public void cambiarIdioma(Locale locale) {
        mensajes = ResourceBundle.getBundle("mensajes.mensajes", locale);
        setTitle(mensajes.getString("tituloDevoluciones"));
        btnDevolver.setText(mensajes.getString("Devolver"));

        tblLibros.getColumnModel().getColumn(0).setHeaderValue(mensajes.getString("Codigo"));
        tblLibros.getColumnModel().getColumn(1).setHeaderValue(mensajes.getString("Titulo"));
        tblLibros.getColumnModel().getColumn(2).setHeaderValue(mensajes.getString("Autor"));
        tblLibros.getColumnModel().getColumn(3).setHeaderValue(mensajes.getString("Año"));
        tblLibros.getColumnModel().getColumn(3).setHeaderValue(mensajes.getString("Disponible"));

        cargarDatos();
    }

    public void cargarDatos() {

        List<Libro> libros = libroControlador.list();
        DefaultTableModel modelo1 = (DefaultTableModel) tblLibros.getModel();
        modelo1.setNumRows(0);

        for (Libro libro : libros) {
            if (!libro.isDisponible()) {  // Verifica si el libro NO está disponible antes de agregarlo
                Object[] rowData = {libro.getId(), libro.getTitulo(), libro.getAutor(), libro.getAño(), libro.isDisponible()};
                modelo1.addRow(rowData);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDevolver;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblLibros;
    // End of variables declaration//GEN-END:variables

}
